#Import Library#
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


data = pd.read_csv('/content/Automobile.csv')

  
data.head()

  
#Membersihkan Data#
data['name'].unique()


data['name'] = data['name'].apply(lambda x: x.split(' ')[0])


data['name'].value_counts()


data.replace({'name':{'vw':'volkswagen',
                      'vokswagen':'volkswagen',
                      'chevy':'chevrolet',
                      'chevroelt':'chevrolet',
                      'toyouta':'toyota',
                      'maxda':'mazda',
                      'mercedes-benz':'mercedes'}}, inplace = True)

  
data = data[~data['name'].isin(['capri', 'hi'])]

  
#Plot Categorical Features#
car_origin_count = data.groupby(['name', 'origin'], as_index = False).size().sort_values(by='size', ascending = False)
car_origin_count

  
sns.barplot(x=car_origin_count.iloc[0:15, 0], y=car_origin_count.iloc[0:15, 2])
plt.xlabel('Car Name', fontsize=14)
plt.xticks(rotation = 50)
plt.ylabel('Count', fontsize=14)
plt.title('Count by Car Name', fontsize=16)

  
plt.figure(figsize=(20, 5))
ax = sns.barplot(x=car_origin_count.iloc[0:15, 0], y=car_origin_count.iloc[0:15, 2])
plt.xlabel('Car Name', fontsize=16)
plt.ylabel('Number of Cars', fontsize=16)
plt.title('Which country have car more by number', fontsize=20)
plt.xticks(rotation=60,fontsize=12)
plt.margins(y=0.15)

#Annotate the bar plot
labels = car_origin_count['origin'].values
for rect, label in zip(ax.patches, labels):
    height = rect.get_height()
    ax.text(rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom",fontsize=16)
    
plt.show()


#menghitung jumlah mobil dari tiap negara
origin_count = data.groupby('origin').size().sort_values()

#mengubah nama kolom size
origin_count = origin_count.rename('count').reset_index()
origin_count


# Create subplots
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))

# Plot the count bar plot
sns.barplot(x='origin', y='count', data=origin_count, ax=ax1)
ax1.set_xlabel('Origin', fontsize=16)
ax1.set_ylabel('Count', fontsize=16)
ax1.set_title('Count by Car Origin', fontsize=18)
ax1.bar_label(ax1.containers[0])

# Plot the pie chart
ax2.pie(origin_count['count'], labels=origin_count['origin'], autopct='%1.1f%%')
ax2.set_title('Car Origins Distribution')

# Adjust spacing between subplots
plt.tight_layout()

# Display the combined plot
plt.show()


#membuat subplot 
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15, 7))

#membuat plot bar jumlah
sns.barplot(x='origin', y='count', data=origin_count, ax=ax1)
ax1.set_xlabel('Origin', fontsize=16)
ax1.set_ylabel('Count', fontsize=16)
ax1.set_title('Count by Car Origin', fontsize=18)
ax1.bar_label(ax1.containers[0])

#membuat plot piechart
ax2.pie(origin_count['count'], labels=origin_count['origin'], autopct="%1.1f%%")
ax2.set_title('Car Origins Distribution')

#mengatur spasi diantara subplot
plt.tight_layout

#menampilkan kedua plot
plt.show()


#Plotting Numerical Features#
def two_plots_num_columns(feature):
  plt.figure(figsize=(11,5))

  plt.subplot(1,2,1)
  plt.title('histogram', fontsize=14)
  sns.histplot(data=data, x=feature, kde=True)
  
  plt.subplot(1,2,2)
  plt.title('boxplot', fontsize=14)
  sns.boxplot(y=data[feature])


two_plots_num_columns('mpg')


def grouping_features(feature):
  #grouping
  car_by_feature = data.groupby('name', as_index=False)[feature].mean().sort_values(by=feature, ascending=False)

  #plotting
  sns.barplot(x=car_by_feature.iloc[0:20, 1], y=car_by_feature.iloc[0:20, 0])
  plt.xlabel(f'{feature}', fontsize=14)
  plt.ylabel('car name', fontsize=14)
  plt.title(f'{feature} by Car Name', fontsize=14)


grouping_features('mpg')


#displacement feature#
two_plots_num_columns('displacement')


grouping_features('displacement')

#horsepower feature#
two_plots_num_columns('horsepower')


grouping_features('horsepower')


  
